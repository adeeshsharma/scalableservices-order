/orders:
  get:
    summary: Get all orders
    tags:
      - Orders
    responses:
      '200':
        description: A list of orders
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Order'
  post:
    summary: Create a new order
    tags:
      - Orders
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrderCreate'
    responses:
      '200':
        description: The created order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'

/order/{id}:
  get:
    summary: Get an order by ID
    tags:
      - Orders
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The order ID
    responses:
      '200':
        description: An order object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      '404':
        description: Order not found
  delete:
    summary: Delete an order by ID
    tags:
      - Orders
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The order ID
    responses:
      '204':
        description: Order deleted successfully
      '404':
        description: Order not found

/orders/user/{userId}:
  get:
    summary: Get all orders for a specific user
    tags:
      - Orders
    parameters:
      - in: path
        name: userId
        schema:
          type: string
        required: true
        description: The user ID
    responses:
      '200':
        description: A list of orders for the specified user
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Order'
      '404':
        description: User not found
